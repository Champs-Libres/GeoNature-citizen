version: "3.4"

services:
  frontend:
    container_name: citizen-front
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - citizen-kane
    ports:
      - "${FRONT_PORT-4200}:${FRONT_PORT-4200}"

  backend:
    container_name: citizen-back
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./VERSION:/VERSION
      - ./config:/config
      - ./external_modules:/external_modules
      - ./media:/media
    depends_on:
      - db
    ports:
      - "${API_PORT-5002}:${API_PORT-5002}"
    networks:
      - citizen-kane

  db:
    container_name: citizen-db
    image: postgis/postgis:10-2.5-alpine
    ports:
      - "${DB_PORT-8465}:${DB_PORT-5432}"
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME-geocitizen}
      - POSTGRES_USER=${DB_USER-geonatuser}
      - POSTGRES_PASSWORD=${DB_PASSWORD-monpassachanger}
    volumes:
      - citizen_data:/var/lib/postgresql/data/pgdata
    networks:
      - citizen-kane

  nginx:
    container_name: citizen-nginx
    image: nginx
    depends_on:
      - frontend
    ports:
      - "${NGINX_PORT-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/.htpasswd:/etc/nginx/conf/.htpasswd
    networks:
      - citizen-kane

networks:
  citizen-kane:
    external: false
volumes:
  citizen_data:
